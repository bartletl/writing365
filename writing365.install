<?php

/**
 * @file
 * Install, update and uninstall functions for the writing365 module.
 */

/**
 * Implements hook_install().
 */
function writing365_install() {
  // Ensure the writing365 node type is available.
  node_types_rebuild();
  $types = node_type_get_types();
  node_add_body_field($types['writing365']);
  
  //close comments
  variable_set('comment_writing365', 0);
  
  
  
  $roles = writing365_default_roles();
  foreach ($roles as $value) {
  	$role = new stdClass();
  	
  	// check to ensure that the role isn't already returned
  	if (!user_role_load_by_name($value)) {
  		$role->name = $value['name'];
  		$role->weight = $value['weight'];
  		
  		user_role_save($role);
  	}
  }
}

/**
 * Implements hook_uninstall().
 */
function writing365_uninstall() {
	// clean uninstall returns the database back to its state before the module was installed. No trace will be left of the Writing 365 module
  variable_del('writing365_block_count');
  
  $node_type_delete = db_delete('node_type')
  	->condition('module', 'writing365')
  	->execute();
  
  // delete the entry that turns of comments for the data type
  $variable_delete = db_delete('variable')
  ->condition('name', 'comment_writing365')
  ->execute();
  
  // determine the rid for the instructor role
  $rid = db_query('Select rid from {role} where name = :name', array(':name' => 'instructor'))->fetchField();
   
  $delete_roles = db_delete('users_roles')
  ->condition('rid', $rid)
  ->execute();
  	
  $delete_instructor_role = db_delete('role')
  	->condition('name', 'instructor')
  	->execute();

  // delete all Writing 365 content.
  
  //first select the nids
  $writing365_nids = db_query('select nid from {node} where type = :type', array(':type' => 'writing365'));

  // delete the nids
  $writing365_node_delete = db_delete('node')
  ->condition('type', 'writing365')
  ->execute();
  
  //delete module's field_revision_body nodes
  $revision_delete = db_delete('field_revision_body')
  ->condition('bundle', 'writing365')
  ->execute();
  /**
  foreach ($writing365_nids as $value) {
  	$delete_nid = $value->nid;
  	//field_data_body deletes
  	$field_delete = db_delete('field_data_body')
  	->condition('entity_id', $delete_nid)
  	->execute();
  	
  	//node_revision
  	$node_revision_delete = db_delete('node_revision')
  	->condition('nid', $delete_nid)
  	->execute();
  	
  	//node_comment_statistics
  	$node_comment_delete = db_delete('node_comment_statistics')
  	->condition('nid', $delete_nid)
  	->execute();
  }
*/ 
  
}